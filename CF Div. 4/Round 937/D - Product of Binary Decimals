#include <iostream>
#include <vector>
#include <string>
#include <bitset>
using namespace std;

bool zeroOne(int n) 
{
    string s = to_string(n);
    for(char c : s) 
    {
        if (c != '0' && c != '1') 
        {
            return false;
        }
    }
    return true;
}

int check(vector<int>& v, int n)
{
    for(int i = 0; i < v.size(); i++)
    {
        if(n % v[i] == 0)
        {
            while(n % v[i] == 0)
            {
                n /= v[i];
            }
        }
    }
    return n;
}

vector<int> numbers(int start, int end) 
{
    vector<int> numbers;
    for (int i = start; i <= end; i++) 
    {
        string x = bitset<6>(i).to_string();
        numbers.push_back(stoi(x)); 
    }
    return numbers;
}

int main() 
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    vector<int> v = numbers(2, 63);
    int t; 
    cin >> t;
    while (t--) 
    {
        int n; 
        cin >> n;
        if (zeroOne(n)) 
        {
            cout << "YES\n";
            continue;
        }
        cout << ((check(v, n) > 1) ? "NO\n" : "YES\n");
    }
    return 0;
}
